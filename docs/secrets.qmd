::: {.content-visible when-profile="fr"}

# Gestion des secrets

### Les variables d'environnement;

Il arrive que certaines informations doivent être mise à disposition d'un grand nombre d'applications, ou ne doivent pas figurer en clair dans votre code (jetons d'accès, mots de passe, etc.). L'utilisation de **variables d'environnement** permet de pouvoir accéder à ces informations depuis n'importe quel service.

Au lancement d'un service, plusieurs variables d'environnement sont déjà injectées automatiquement — par exemple, les tokens d'accès à [GitHub ](controle-de-version.md)et [MinIO](stockage-de-donnees.md).

![](img/secret.png)

### Création et gestion de secrets

Sur la plateforme, les variables d'environnement sont des secrets écrits dans [Vault](https://www.vaultproject.io) (le coffre fort du Datalab) et sont chiffrées. Cela vous permet d'y stocker des jetons, des identifiants et des mots de passe. La page [Mes secrets](https://datalab.sspcloud.fr/my-secrets/) prends la forme d'un explorateur de fichiers où vous pouvez trier et hiérarchiser vos variables dans des dossiers.

#### Pour commencer :

* Créez un nouveau dossier `+ Nouveau dossier`
* Puis dans ce dossier, créez un nouveau secret `+ Nouveau secret`
* Ouvrez votre secret&#x20;

![](img/toolbarsecret.png)

Chaque secret peut contenir plusieurs variables, composés de paires de clés-valeurs.

* &#x20;`+ Ajouter une variable`

![](img/secrettable.png)

::: {.callout-note}
Les clés (nom de la variable) commencent toujours par`$`et contiennent uniquement des lettres, des chiffres et le caractère de soulignement (`_`). Par convention, les clefs s'écrivent en MAJUSCULE.
:::

Remplissez le champ du nom de la clef puis sa valeur.

### Convertir des secrets en variables d'environnement

Une fois votre secret édité, avec ses différentes variables, vous êtes prêt à l'utiliser dans votre service.&#x20;

* Copiez le chemin du secret en cliquant sur le bouton `Utiliser dans un service`
* Puis au moment de la configuration de votre service, allez dans l'onglet `Vault`et collez le chemin du secret dans le champ dédié

![](img/secret-config.png)

* Créez et ouvrez votre service

Pour vérifier que vos variables d'environnement ont bien été crées, vous pouvez lancer les commandes suivantes dans le terminal du service :

```bash
# Lister toutes les variables d'environnement disponibles
env 

# Afficher la valeur d'une variable d'environnement
echo $MA_VARIABLE 

# Trouver toutes les variables d'environnement qui contiennent un pattern donné
env | grep -i "<PATTERN>"
```

:::







::: {.content-visible when-profile="en"}

# Secrets Management

### Environment Variables

Sometimes, certain pieces of information need to be made available to a large number of applications, or they should not be directly embedded in your code (access tokens, passwords, etc.). The use of **environment variables** allows accessing this information from any service.

When a service is launched, several environment variables are automatically injected—such as access tokens for [GitHub](version-control.md) and [MinIO](data-storage.md).

![](img/secret.png)

### Creation and Management of Secrets

On the platform, environment variables are treated as secrets stored in [Vault](https://www.vaultproject.io) (the Datalab's safe) and are encrypted. This enables you to store tokens, credentials, and passwords securely. The [My Secrets](https://datalab.sspcloud.fr/my-secrets/) page is designed like a file explorer, allowing you to sort and organize your variables into folders.

#### Getting Started:

* Create a new folder with `+ New folder`.
* Then, within this folder, create a new secret with `+ New secret`.
* Open your secret.

![](img/toolbarsecret.png)

Each secret can contain multiple variables, consisting of key-value pairs.

* `+ Add a variable`

![](img/secrettable.png)

::: {.callout-note}
The keys (variable names) always begin with `$` and contain only letters, numbers, and the underscore character (`_`). By convention, keys are written in UPPERCASE.
:::

Fill in the name of the key and its value.

### Converting Secrets into Environment Variables

Once your secret is edited, along with its different variables, you are ready to use it in your service.

* Copy the secret's path by clicking on the `Use in a service` button.
* Then, during the configuration of your service, go to the `Vault` tab and paste the secret's path in the dedicated field.

![](img/secret-config.png)

* Create and open your service.

To verify that your environment variables have been successfully created, you can run the following commands in the service terminal:

```bash
# List all available environment variables
env

# Display the value of an environment variable
echo $MY_VARIABLE

# Find all environment variables containing a given pattern
env | grep -i "<PATTERN>"
```

:::

:::