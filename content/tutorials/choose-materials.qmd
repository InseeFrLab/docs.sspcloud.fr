::: {.content-visible when-profile="fr"}

# Quels supports utiliser pour les formations ?

Lors de la conception de supports de formation efficaces, il est crucial de choisir des formats qui engagent les apprenants et am√©liorent leur compr√©hension. Bien que les PDFs, les pr√©sentations et les vid√©os soient des moyens utiles de pr√©senter des informations, nous nous concentrerons sur les environnements interactifs, car ils sont id√©aux pour la formation pratique. Les environnements interactifs permettent aux apprenants d'appliquer les concepts imm√©diatement, de tester le code en temps r√©el et de participer activement √† leur apprentissage, ce qui favorise une compr√©hension approfondie et une meilleure r√©tention des comp√©tences.

Dans ce qui suit, nous comparerons diff√©rents environnements interactifs en fonction du langage utilis√©. Une m√©thode de d√©ploiement d'un site statique sur la plateforme √† l'aide de Quarto sera √©galement pr√©sent√©e.

## Utilisation de Python

üêç En Python, les notebooks Jupyter, √©galement disponibles dans VSCode, s'imposent comme le choix incontournable. Avec le support des m√©dias riches, des widgets et de nombreuses extensions, ils permettent d'int√©grer des graphiques interactifs, des tableaux de donn√©es et m√™me des formulaires pour les exercices.

![Jupyter](../img/jupyter.png)

## Utilisation de R

¬ÆÔ∏è En R, nous pouvons utiliser soit les notebooks R Markdown, soit LearnR, qui propose des tutoriels interactifs int√©gr√©s dans des documents R Markdown. Les deux combinent explications, code et visualisation dans un document interactif. Cependant, m√™me si LearnR permet de g√©n√©rer des √©l√©ments interactifs et plus complexes tels que des quiz, ce qui le rend id√©al pour les tutoriels d√©butants, il n√©cessite le d√©ploiement d'un serveur Shiny, ce qui peut √™tre co√ªteux. De plus, dans LearnR, les cellules ne communiquent pas √† l'√©chelle de tout l'environnement ; ainsi, la d√©finition de variables globales ou la gestion de l'√©tat devient difficile. Cette limitation r√©duit l'efficacit√© de LearnR pour des tutoriels complexes o√π un √©tat connect√© et √©volutif est n√©cessaire pour progresser √† partir des √©tapes pr√©c√©dentes.

Dans l'ensemble, bien que LearnR offre un environnement interactif pour R adapt√© aux exercices simples, les notebooks R Markdown offrent une solution plus robuste, flexible et largement utilis√©e. Pour R, les sessions interactives locales ou R Markdown traditionnel sont souvent plus pratiques pour des formations compl√®tes.

C'est pourquoi, pour des supports de formation sophistiqu√©s n√©cessitant une progression fluide et une gestion de l'√©tat, les notebooks restent le choix privil√©gi√© pour les tutoriels en Python ou en R.

:::



::: {.content-visible when-profile="en"}

# Which materials should be used for Trainings?

When designing effective training materials, it‚Äôs crucial to select formats that engage learners and enhance comprehension. Even though PDFs, slide decks, and videos all offer valuable ways to present information, we will focus on interactive environments as they are ideal for practical training. Interactive environments allow learners to apply concepts immediately, test code in real time, and actively participate in their learning journey which promotes deeper understanding and skill retention. 

In the following, we'll compare different interactive environments according to the language used. Will also be shown a way to deploy a static site on the platform using quarto. 

## Using Python 

üêç In python, Jupyter Notebooks, also available in Vscode, stand out as the go-to choice. With support for rich media, widgets, and numerous extensions, it allows the integration of interactive graphs, data tables, and even forms for exercises.

![Jupyter](../img/jupyter.png)

## Using R 

¬ÆÔ∏è In R, we can either use Rmarkdown Notebooks or LearnR which offers interactive tutorials embedded within R Markdown documents. Both of them combine explanation, code and visualization in an interactive document. However, even if learnR allows to generate interactive and more complexe elements such as quizzes making it ideal for beginner tutorials, it requires the deployment of a Shiny server which can be costly. Moreover, in learnR cells do not communicate across the entire environment hence defining global variables or managing state becomes challenging. This restriction limits the effectiveness of learnr for complex tutorials where a connected, evolving state is necessary to build on previous steps.

Overall, while learnR provides an interactive environment for R that‚Äôs suitable for simple exercises, Rmarkdown Notebooks offer a more robust, flexible, and widely-used solution. For R, traditional R Markdown or local interactive sessions are often more practical for comprehensive training sessions. 
This is why, for sophisticated training materials that require smooth progression and state management, notebooks remains the preferred choice for Python or R tutorials.


::: {.callout-warning}
Here will lie some explanation on how to deploy a static site using quarto and CI to automate its deployment. It may be moved to another tab.
:::

:::