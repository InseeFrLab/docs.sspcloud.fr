::: {.content-visible when-profile="fr"}

# Configuration des services (en construction)

Après avoir cliqué sur "Nouveau service" > "RStudio/Jupyter-python/VScode-python" > "Lancer"

## Nom personnalisé

Pour reconnaître le service et/ou la configuration si on l'enregistre en cliquant sur le symbole de marque page en haut à droite.
Si le nom existe déjà parmi les configurations enregistrées, l'enregistrement écrasera l'ancienne configuration.

Pratique pour distinguer différents services d'un même type (RStudio, Jupyter...).

## Partager le service

Il est possible de partager un service à un groupe de personnes en cochant la case "Partager le service" à l'ouverture du service.
Les autres membres du groupe verront le service et pourront l'utiliser.
La création de groupes se fait en écrivant aux administrateurs sur Tchap (en privé) ou par mail à l'adresse innovation@insee.fr, en communiquant le nom de groupe, les noms d'utilisateurs des membres, le besoin ou non d'un espace de stockage associé sur MinIO.

::: {.callout-info} 
Pour un besoin ponctuel, il est aussi possible de partager un service que l'on a créé à une autre personne.
Il suffit de lui communiquer l'URL (type https://user-aaaaaaaaaaaaaa-xxxxxxx-x.user.lab.sspcloud.fr/), ainsi que le mot de passe du service.
Le nom d'utilisateur reste **Onyxia**. Attention, il est recommandé de changer le mot de passe du service lors de son lancement (onglet *Security*) pour ne pas le faire fuiter.
Il faudra aussi décocher *Enable IP protection* et *Enable network policy* dans l'onglet *Security*.
Une seule personne à la fois peut se connecter à un service RStudio.  
:::

## S3

## Kubernetes

## Init

### PersonalInit

Un lien vers un script shell (enchaînement de commandes linux) qui est exécuté juste après le lancement du service.
Pratique pour automatiser la mise en place de certaines configurations.

Ce lien du script doit être accessible sur internet, par exemple sur [https://git.lab.sspcloud.fr/](https://git.lab.sspcloud.fr/) avec un projet public ou sur le [stockage S3](https://minio-console.lab.sspcloud.fr/) avec un fichier public.

[Exemple de script d'initialisation](https://git.drees.fr/drees_code_public/ressources/tutos/-/blob/diffusion/contenu/init.sh) qui clone un projet à partir d'une instance Gitlab privée, configure les options globales de RStudio, ouvre automatiquement le projet RStudio cloné, installe et sélectionne la correction orthographique française, personnalise les bribes de codes (*snippets*).  
Vous pouvez également trouver un ensemble de scripts d'initialisation sur [notre repo github dédié](https://github.com/InseeFrLab/sspcloud-init-scripts/).  

::: {.callout-warning} 
Le script est exécuté en tant que superutilisateur (*Root*) et les fichiers qu'il crée sont ainsi la propriété du superutilisateur.
Ceci génère des erreurs ensuite quand ces fichiers sont appelés, par exemple des fichiers de configuration de RStudio.
Pour rendre à l'utilisateur normal (qui s'appelle *onyxia*) les droit sur son dossier personnel :
```bash
chown -R ${USERNAME}:${GROUPNAME} ${HOME}
```
:::


### PersonalInitArgs

Des options à passer au script d'initialisation, séparées par des espaces et que l'on peut ensuite appeler avec `$1`, `$2`...

Par exemple si on inscrit dans le champ *PersonalInitArgs* `fichier1.txt fichier2.txt`, et qu'on utilise ce script d'initialisation :

```bash
#!/bin/bash
touch $1
touch $2
```
Le script créera via la commande `touch` deux fichiers `fichier1.txt` et `fichier2.txt`.

## Onyxia

## Resources

## Networking

## Security

### Password

C'est le mot de passe à saisir lorsqu'on ouvre un service, celui donné par "Copier le mot de passage" sur la page des services.
Il est fourni par le paramètre général "Mot de passe pour vos services" que l'on trouve dans "Mon Compte" > "Informations du compte", sauf si on en a défini un particulier au niveau du service.

### Enable IP protection

Si coché, le service n'est accessible que par une seule IP, à décocher si l'on souhaite travailler de deux endroits différents.

### Enable network policy

## Git

Pour apprendre à utiliser cet onglet, voir la [page dédiée](/docs/fr/version-control.html).

::: {.callout-warning} 
Il n'est pas possible de cloner automatiquement un projet privé d'une instance privée (c'est-à-dire autre que gitlab.com et github.com).
Pour le faire, il faudra recourir à un script shell comme indiqué [ici](#init).
:::

### Enabled

Si coché, configure Git et tente un clone au démarrage du service.

### Name

Le nom qui apparaîtra dans les commits (pas le nom d'utilisateur du compte Gitlab ou Github).

### Email

L'adresse email qui apparaîtra dans les commits (pas forcément le mail associé au compte Gitlab ou Github).

### Cache

### Token

Jeton d'accès défini sur la plateforme utilisée (Gitlab, Github...).

### Repository

L'URL obtenue sur la plateforme utilisée (Gitlab, Github...) en cliquant sur "Cloner" > HTTPS.

De type :
```
https://github.com/InseeFrLab/docs.sspcloud.fr.git
```

### Service

### Discovery

### Persistence

### Vault 

Pour apprendre à utiliser cet onglet, voir la [page dédiée](/docs/fr/secrets.html).

:::








::: {.content-visible when-profile="en"}

# Service Configuration

After clicking on "New service" > "RStudio/Jupyter-python/VScode-python" > "Launch"

## Custom Name

To recognize the service and/or the configuration if saved by clicking on the bookmark symbol at the top right. If the name already exists among the saved configurations, saving will overwrite the old configuration.

Convenient for distinguishing different services of the same type (RStudio, Jupyter...).

## Share the Service

It is possible to share a service with a group of people by checking the "Share the service" box when opening the service. Other members of the group will see the service and can use it. Creating groups can be done by writing to administrators on Tchap (privately) or by email at [innovation@insee.fr](mailto:innovation@insee.fr), providing the group name, usernames of the members, and whether or not a associated storage space is needed on MinIO.

::: {.callout-info} 
For occasional needs, it is also possible to share a service that you have created with another person. Simply provide them with the URL (e.g., [https://user-aaaaaaaaaaaaaa-xxxxxxx-x.user.lab.sspcloud.fr/](https://user-aaaaaaaaaaaaaa-xxxxxxx-x.user.lab.sspcloud.fr/)) and the service password. The username remains **Onyxia**. Please note, it is recommended to change the service password during its launch (in the *Security* tab) to avoid any leaks. You should also uncheck *Enable IP protection* and *Enable network policy* in the *Security* tab. Only one person at a time can connect to an RStudio service. 
:::

## S3

## Kubernetes

## Init

### PersonalInit

A link to a shell script (sequence of Linux commands) that is executed right after the service is launched. Convenient for automating the setup of certain configurations.

This script link must be accessible on the internet, for example, on [https://git.lab.sspcloud.fr/](https://git.lab.sspcloud.fr/) with a public project or on [S3 storage](https://minio-console.lab.sspcloud.fr/) with a public file.

[Example of an initialization script](https://git.drees.fr/drees_code_public/ressources/tutos/-/blob/diffusion/contenu/init.sh) that clones a project from a private Gitlab instance, configures global RStudio options, automatically opens the cloned RStudio project, installs and selects French spelling correction, and customizes code snippets (*snippets*).  
You can also find some initialization scripts on [our dedicated repo on github](https://github.com/InseeFrLab/sspcloud-init-scripts/). 
 

::: {.callout-warning} 
The script is executed as a superuser (*Root*), and the files it creates become the property of the superuser. This leads to errors when these files are called, for example, RStudio configuration files. To give normal user rights (named *onyxia*) to their personal folder
:::

```bash
chown -R ${USERNAME}:${GROUPNAME} ${HOME}
```

:::

### PersonalInitArgs

Options to pass to the initialization script, separated by spaces and can be subsequently called with `$1`, `$2`, etc.

For example, if you enter `file1.txt file2.txt` in the *PersonalInitArgs* field and use this initialization script:

```bash
#!/bin/bash
touch $1
touch $2
```

The script will create two files, `file1.txt` and `file2.txt`, using the `touch` command.

## Onyxia

## Resources

## Networking

## Security

### Password

This is the password to enter when opening a service, which is provided by "Copy the password" on the service page. It is supplied by the general parameter "Password for your services," which can be found in "My Account" > "Account Information," unless a specific one is defined at the service level.

### Enable IP Protection

If checked, the service is only accessible from a single IP. Uncheck it if you wish to work from different locations.

### Enable Network Policy

## Git

To learn how to use this tab, see the [dedicated page](/docs/en/version-control.html).

::: {.callout-warning} 
It is not possible to automatically clone a private project from a private instance (i.e., other than gitlab.com and github.com). To do so, you will need to use a shell script as indicated [here](#init). 
:::

### Enabled

If checked, configure Git and attempt a clone when the service starts.

### Name

The name that will appear in the commits (not the Gitlab or Github account username).

### Email

The email address that will appear in the commits (not necessarily the email associated with the Gitlab or Github account).

### Cache

### Token

Access token defined on the platform used (Gitlab, Github...).

### Repository

The URL obtained from the platform used (Gitlab, Github...) by clicking on "Clone" > HTTPS.

In the format:

```bash
https://github.com/InseeFrLab/docs.sspcloud.fr.git
```

### Service

### Discovery

### Persistence

### Vault

To learn how to use this tab, see the [dedicated page](/docs/en/secrets.html).

:::
